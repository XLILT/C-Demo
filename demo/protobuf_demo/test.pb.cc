// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* ParallelMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParallelMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* NestedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NestedMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_test_2eproto() {
  protobuf_AddDesc_test_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "test.proto");
  GOOGLE_CHECK(file != NULL);
  ParallelMessage_descriptor_ = file->message_type(0);
  static const int ParallelMessage_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item8_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item9_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, item10_),
  };
  ParallelMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ParallelMessage_descriptor_,
      ParallelMessage::default_instance_,
      ParallelMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ParallelMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParallelMessage, _is_default_instance_));
  NestedMessage_descriptor_ = file->message_type(1);
  static const int NestedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedMessage, item1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedMessage, item2_),
  };
  NestedMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NestedMessage_descriptor_,
      NestedMessage::default_instance_,
      NestedMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(NestedMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NestedMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_test_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ParallelMessage_descriptor_, &ParallelMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NestedMessage_descriptor_, &NestedMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_test_2eproto() {
  delete ParallelMessage::default_instance_;
  delete ParallelMessage_reflection_;
  delete NestedMessage::default_instance_;
  delete NestedMessage_reflection_;
}

void protobuf_AddDesc_test_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntest.proto\"\250\001\n\017ParallelMessage\022\r\n\005item"
    "1\030\001 \001(\005\022\r\n\005item2\030\002 \001(\005\022\r\n\005item3\030\003 \001(\005\022\r\n"
    "\005item4\030\004 \001(\005\022\r\n\005item5\030\005 \001(\005\022\r\n\005item6\030\006 \001"
    "(\t\022\r\n\005item7\030\007 \001(\t\022\r\n\005item8\030\010 \001(\t\022\r\n\005item"
    "9\030\t \001(\t\022\016\n\006item10\030\n \001(\t\"-\n\rNestedMessage"
    "\022\r\n\005item1\030\001 \003(\005\022\r\n\005item2\030\002 \003(\tb\006proto3", 238);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
  ParallelMessage::default_instance_ = new ParallelMessage();
  NestedMessage::default_instance_ = new NestedMessage();
  ParallelMessage::default_instance_->InitAsDefaultInstance();
  NestedMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_test_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_test_2eproto {
  StaticDescriptorInitializer_test_2eproto() {
    protobuf_AddDesc_test_2eproto();
  }
} static_descriptor_initializer_test_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParallelMessage::kItem1FieldNumber;
const int ParallelMessage::kItem2FieldNumber;
const int ParallelMessage::kItem3FieldNumber;
const int ParallelMessage::kItem4FieldNumber;
const int ParallelMessage::kItem5FieldNumber;
const int ParallelMessage::kItem6FieldNumber;
const int ParallelMessage::kItem7FieldNumber;
const int ParallelMessage::kItem8FieldNumber;
const int ParallelMessage::kItem9FieldNumber;
const int ParallelMessage::kItem10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParallelMessage::ParallelMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ParallelMessage)
}

void ParallelMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ParallelMessage::ParallelMessage(const ParallelMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ParallelMessage)
}

void ParallelMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  item1_ = 0;
  item2_ = 0;
  item3_ = 0;
  item4_ = 0;
  item5_ = 0;
  item6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item10_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ParallelMessage::~ParallelMessage() {
  // @@protoc_insertion_point(destructor:ParallelMessage)
  SharedDtor();
}

void ParallelMessage::SharedDtor() {
  item6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item7_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item8_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item9_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item10_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ParallelMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParallelMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParallelMessage_descriptor_;
}

const ParallelMessage& ParallelMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

ParallelMessage* ParallelMessage::default_instance_ = NULL;

ParallelMessage* ParallelMessage::New(::google::protobuf::Arena* arena) const {
  ParallelMessage* n = new ParallelMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParallelMessage::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ParallelMessage*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item1_, item4_);
  item5_ = 0;
  item6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item10_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ParallelMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ParallelMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 item1 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item2;
        break;
      }

      // optional int32 item2 = 2;
      case 2: {
        if (tag == 16) {
         parse_item2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_item3;
        break;
      }

      // optional int32 item3 = 3;
      case 3: {
        if (tag == 24) {
         parse_item3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item3_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_item4;
        break;
      }

      // optional int32 item4 = 4;
      case 4: {
        if (tag == 32) {
         parse_item4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item4_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_item5;
        break;
      }

      // optional int32 item5 = 5;
      case 5: {
        if (tag == 40) {
         parse_item5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &item5_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_item6;
        break;
      }

      // optional string item6 = 6;
      case 6: {
        if (tag == 50) {
         parse_item6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item6()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item6().data(), this->item6().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ParallelMessage.item6"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_item7;
        break;
      }

      // optional string item7 = 7;
      case 7: {
        if (tag == 58) {
         parse_item7:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item7()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item7().data(), this->item7().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ParallelMessage.item7"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_item8;
        break;
      }

      // optional string item8 = 8;
      case 8: {
        if (tag == 66) {
         parse_item8:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item8()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item8().data(), this->item8().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ParallelMessage.item8"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_item9;
        break;
      }

      // optional string item9 = 9;
      case 9: {
        if (tag == 74) {
         parse_item9:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item9()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item9().data(), this->item9().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ParallelMessage.item9"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_item10;
        break;
      }

      // optional string item10 = 10;
      case 10: {
        if (tag == 82) {
         parse_item10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item10()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item10().data(), this->item10().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ParallelMessage.item10"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ParallelMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ParallelMessage)
  return false;
#undef DO_
}

void ParallelMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ParallelMessage)
  // optional int32 item1 = 1;
  if (this->item1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->item1(), output);
  }

  // optional int32 item2 = 2;
  if (this->item2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->item2(), output);
  }

  // optional int32 item3 = 3;
  if (this->item3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->item3(), output);
  }

  // optional int32 item4 = 4;
  if (this->item4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->item4(), output);
  }

  // optional int32 item5 = 5;
  if (this->item5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->item5(), output);
  }

  // optional string item6 = 6;
  if (this->item6().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item6().data(), this->item6().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->item6(), output);
  }

  // optional string item7 = 7;
  if (this->item7().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item7().data(), this->item7().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->item7(), output);
  }

  // optional string item8 = 8;
  if (this->item8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item8().data(), this->item8().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->item8(), output);
  }

  // optional string item9 = 9;
  if (this->item9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item9().data(), this->item9().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->item9(), output);
  }

  // optional string item10 = 10;
  if (this->item10().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item10().data(), this->item10().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item10");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->item10(), output);
  }

  // @@protoc_insertion_point(serialize_end:ParallelMessage)
}

::google::protobuf::uint8* ParallelMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ParallelMessage)
  // optional int32 item1 = 1;
  if (this->item1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->item1(), target);
  }

  // optional int32 item2 = 2;
  if (this->item2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->item2(), target);
  }

  // optional int32 item3 = 3;
  if (this->item3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->item3(), target);
  }

  // optional int32 item4 = 4;
  if (this->item4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->item4(), target);
  }

  // optional int32 item5 = 5;
  if (this->item5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->item5(), target);
  }

  // optional string item6 = 6;
  if (this->item6().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item6().data(), this->item6().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->item6(), target);
  }

  // optional string item7 = 7;
  if (this->item7().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item7().data(), this->item7().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->item7(), target);
  }

  // optional string item8 = 8;
  if (this->item8().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item8().data(), this->item8().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->item8(), target);
  }

  // optional string item9 = 9;
  if (this->item9().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item9().data(), this->item9().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->item9(), target);
  }

  // optional string item10 = 10;
  if (this->item10().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item10().data(), this->item10().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ParallelMessage.item10");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->item10(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ParallelMessage)
  return target;
}

int ParallelMessage::ByteSize() const {
  int total_size = 0;

  // optional int32 item1 = 1;
  if (this->item1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item1());
  }

  // optional int32 item2 = 2;
  if (this->item2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item2());
  }

  // optional int32 item3 = 3;
  if (this->item3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item3());
  }

  // optional int32 item4 = 4;
  if (this->item4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item4());
  }

  // optional int32 item5 = 5;
  if (this->item5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->item5());
  }

  // optional string item6 = 6;
  if (this->item6().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item6());
  }

  // optional string item7 = 7;
  if (this->item7().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item7());
  }

  // optional string item8 = 8;
  if (this->item8().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item8());
  }

  // optional string item9 = 9;
  if (this->item9().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item9());
  }

  // optional string item10 = 10;
  if (this->item10().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item10());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParallelMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ParallelMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ParallelMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ParallelMessage::MergeFrom(const ParallelMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.item1() != 0) {
    set_item1(from.item1());
  }
  if (from.item2() != 0) {
    set_item2(from.item2());
  }
  if (from.item3() != 0) {
    set_item3(from.item3());
  }
  if (from.item4() != 0) {
    set_item4(from.item4());
  }
  if (from.item5() != 0) {
    set_item5(from.item5());
  }
  if (from.item6().size() > 0) {

    item6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item6_);
  }
  if (from.item7().size() > 0) {

    item7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item7_);
  }
  if (from.item8().size() > 0) {

    item8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item8_);
  }
  if (from.item9().size() > 0) {

    item9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item9_);
  }
  if (from.item10().size() > 0) {

    item10_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item10_);
  }
}

void ParallelMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParallelMessage::CopyFrom(const ParallelMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParallelMessage::IsInitialized() const {

  return true;
}

void ParallelMessage::Swap(ParallelMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParallelMessage::InternalSwap(ParallelMessage* other) {
  std::swap(item1_, other->item1_);
  std::swap(item2_, other->item2_);
  std::swap(item3_, other->item3_);
  std::swap(item4_, other->item4_);
  std::swap(item5_, other->item5_);
  item6_.Swap(&other->item6_);
  item7_.Swap(&other->item7_);
  item8_.Swap(&other->item8_);
  item9_.Swap(&other->item9_);
  item10_.Swap(&other->item10_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParallelMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParallelMessage_descriptor_;
  metadata.reflection = ParallelMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParallelMessage

// optional int32 item1 = 1;
void ParallelMessage::clear_item1() {
  item1_ = 0;
}
 ::google::protobuf::int32 ParallelMessage::item1() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item1)
  return item1_;
}
 void ParallelMessage::set_item1(::google::protobuf::int32 value) {
  
  item1_ = value;
  // @@protoc_insertion_point(field_set:ParallelMessage.item1)
}

// optional int32 item2 = 2;
void ParallelMessage::clear_item2() {
  item2_ = 0;
}
 ::google::protobuf::int32 ParallelMessage::item2() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item2)
  return item2_;
}
 void ParallelMessage::set_item2(::google::protobuf::int32 value) {
  
  item2_ = value;
  // @@protoc_insertion_point(field_set:ParallelMessage.item2)
}

// optional int32 item3 = 3;
void ParallelMessage::clear_item3() {
  item3_ = 0;
}
 ::google::protobuf::int32 ParallelMessage::item3() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item3)
  return item3_;
}
 void ParallelMessage::set_item3(::google::protobuf::int32 value) {
  
  item3_ = value;
  // @@protoc_insertion_point(field_set:ParallelMessage.item3)
}

// optional int32 item4 = 4;
void ParallelMessage::clear_item4() {
  item4_ = 0;
}
 ::google::protobuf::int32 ParallelMessage::item4() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item4)
  return item4_;
}
 void ParallelMessage::set_item4(::google::protobuf::int32 value) {
  
  item4_ = value;
  // @@protoc_insertion_point(field_set:ParallelMessage.item4)
}

// optional int32 item5 = 5;
void ParallelMessage::clear_item5() {
  item5_ = 0;
}
 ::google::protobuf::int32 ParallelMessage::item5() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item5)
  return item5_;
}
 void ParallelMessage::set_item5(::google::protobuf::int32 value) {
  
  item5_ = value;
  // @@protoc_insertion_point(field_set:ParallelMessage.item5)
}

// optional string item6 = 6;
void ParallelMessage::clear_item6() {
  item6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ParallelMessage::item6() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item6)
  return item6_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_item6(const ::std::string& value) {
  
  item6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ParallelMessage.item6)
}
 void ParallelMessage::set_item6(const char* value) {
  
  item6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ParallelMessage.item6)
}
 void ParallelMessage::set_item6(const char* value, size_t size) {
  
  item6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ParallelMessage.item6)
}
 ::std::string* ParallelMessage::mutable_item6() {
  
  // @@protoc_insertion_point(field_mutable:ParallelMessage.item6)
  return item6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParallelMessage::release_item6() {
  
  return item6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_allocated_item6(::std::string* item6) {
  if (item6 != NULL) {
    
  } else {
    
  }
  item6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item6);
  // @@protoc_insertion_point(field_set_allocated:ParallelMessage.item6)
}

// optional string item7 = 7;
void ParallelMessage::clear_item7() {
  item7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ParallelMessage::item7() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item7)
  return item7_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_item7(const ::std::string& value) {
  
  item7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ParallelMessage.item7)
}
 void ParallelMessage::set_item7(const char* value) {
  
  item7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ParallelMessage.item7)
}
 void ParallelMessage::set_item7(const char* value, size_t size) {
  
  item7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ParallelMessage.item7)
}
 ::std::string* ParallelMessage::mutable_item7() {
  
  // @@protoc_insertion_point(field_mutable:ParallelMessage.item7)
  return item7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParallelMessage::release_item7() {
  
  return item7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_allocated_item7(::std::string* item7) {
  if (item7 != NULL) {
    
  } else {
    
  }
  item7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item7);
  // @@protoc_insertion_point(field_set_allocated:ParallelMessage.item7)
}

// optional string item8 = 8;
void ParallelMessage::clear_item8() {
  item8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ParallelMessage::item8() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item8)
  return item8_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_item8(const ::std::string& value) {
  
  item8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ParallelMessage.item8)
}
 void ParallelMessage::set_item8(const char* value) {
  
  item8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ParallelMessage.item8)
}
 void ParallelMessage::set_item8(const char* value, size_t size) {
  
  item8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ParallelMessage.item8)
}
 ::std::string* ParallelMessage::mutable_item8() {
  
  // @@protoc_insertion_point(field_mutable:ParallelMessage.item8)
  return item8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParallelMessage::release_item8() {
  
  return item8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_allocated_item8(::std::string* item8) {
  if (item8 != NULL) {
    
  } else {
    
  }
  item8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item8);
  // @@protoc_insertion_point(field_set_allocated:ParallelMessage.item8)
}

// optional string item9 = 9;
void ParallelMessage::clear_item9() {
  item9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ParallelMessage::item9() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item9)
  return item9_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_item9(const ::std::string& value) {
  
  item9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ParallelMessage.item9)
}
 void ParallelMessage::set_item9(const char* value) {
  
  item9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ParallelMessage.item9)
}
 void ParallelMessage::set_item9(const char* value, size_t size) {
  
  item9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ParallelMessage.item9)
}
 ::std::string* ParallelMessage::mutable_item9() {
  
  // @@protoc_insertion_point(field_mutable:ParallelMessage.item9)
  return item9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParallelMessage::release_item9() {
  
  return item9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_allocated_item9(::std::string* item9) {
  if (item9 != NULL) {
    
  } else {
    
  }
  item9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item9);
  // @@protoc_insertion_point(field_set_allocated:ParallelMessage.item9)
}

// optional string item10 = 10;
void ParallelMessage::clear_item10() {
  item10_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ParallelMessage::item10() const {
  // @@protoc_insertion_point(field_get:ParallelMessage.item10)
  return item10_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_item10(const ::std::string& value) {
  
  item10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ParallelMessage.item10)
}
 void ParallelMessage::set_item10(const char* value) {
  
  item10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ParallelMessage.item10)
}
 void ParallelMessage::set_item10(const char* value, size_t size) {
  
  item10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ParallelMessage.item10)
}
 ::std::string* ParallelMessage::mutable_item10() {
  
  // @@protoc_insertion_point(field_mutable:ParallelMessage.item10)
  return item10_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ParallelMessage::release_item10() {
  
  return item10_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ParallelMessage::set_allocated_item10(::std::string* item10) {
  if (item10 != NULL) {
    
  } else {
    
  }
  item10_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item10);
  // @@protoc_insertion_point(field_set_allocated:ParallelMessage.item10)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NestedMessage::kItem1FieldNumber;
const int NestedMessage::kItem2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NestedMessage::NestedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:NestedMessage)
}

void NestedMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NestedMessage::NestedMessage(const NestedMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:NestedMessage)
}

void NestedMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

NestedMessage::~NestedMessage() {
  // @@protoc_insertion_point(destructor:NestedMessage)
  SharedDtor();
}

void NestedMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NestedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NestedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NestedMessage_descriptor_;
}

const NestedMessage& NestedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_test_2eproto();
  return *default_instance_;
}

NestedMessage* NestedMessage::default_instance_ = NULL;

NestedMessage* NestedMessage::New(::google::protobuf::Arena* arena) const {
  NestedMessage* n = new NestedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NestedMessage::Clear() {
  item1_.Clear();
  item2_.Clear();
}

bool NestedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NestedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 item1 = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_item1())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_item1())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item2;
        break;
      }

      // repeated string item2 = 2;
      case 2: {
        if (tag == 18) {
         parse_item2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_item2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item2(this->item2_size() - 1).data(),
            this->item2(this->item2_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "NestedMessage.item2"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_item2;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NestedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NestedMessage)
  return false;
#undef DO_
}

void NestedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NestedMessage)
  // repeated int32 item1 = 1;
  if (this->item1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_item1_cached_byte_size_);
  }
  for (int i = 0; i < this->item1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->item1(i), output);
  }

  // repeated string item2 = 2;
  for (int i = 0; i < this->item2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item2(i).data(), this->item2(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NestedMessage.item2");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->item2(i), output);
  }

  // @@protoc_insertion_point(serialize_end:NestedMessage)
}

::google::protobuf::uint8* NestedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:NestedMessage)
  // repeated int32 item1 = 1;
  if (this->item1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _item1_cached_byte_size_, target);
  }
  for (int i = 0; i < this->item1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->item1(i), target);
  }

  // repeated string item2 = 2;
  for (int i = 0; i < this->item2_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item2(i).data(), this->item2(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "NestedMessage.item2");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->item2(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:NestedMessage)
  return target;
}

int NestedMessage::ByteSize() const {
  int total_size = 0;

  // repeated int32 item1 = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->item1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->item1(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _item1_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string item2 = 2;
  total_size += 1 * this->item2_size();
  for (int i = 0; i < this->item2_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->item2(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NestedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NestedMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NestedMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NestedMessage::MergeFrom(const NestedMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  item1_.MergeFrom(from.item1_);
  item2_.MergeFrom(from.item2_);
}

void NestedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NestedMessage::CopyFrom(const NestedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NestedMessage::IsInitialized() const {

  return true;
}

void NestedMessage::Swap(NestedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NestedMessage::InternalSwap(NestedMessage* other) {
  item1_.UnsafeArenaSwap(&other->item1_);
  item2_.UnsafeArenaSwap(&other->item2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NestedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NestedMessage_descriptor_;
  metadata.reflection = NestedMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NestedMessage

// repeated int32 item1 = 1;
int NestedMessage::item1_size() const {
  return item1_.size();
}
void NestedMessage::clear_item1() {
  item1_.Clear();
}
 ::google::protobuf::int32 NestedMessage::item1(int index) const {
  // @@protoc_insertion_point(field_get:NestedMessage.item1)
  return item1_.Get(index);
}
 void NestedMessage::set_item1(int index, ::google::protobuf::int32 value) {
  item1_.Set(index, value);
  // @@protoc_insertion_point(field_set:NestedMessage.item1)
}
 void NestedMessage::add_item1(::google::protobuf::int32 value) {
  item1_.Add(value);
  // @@protoc_insertion_point(field_add:NestedMessage.item1)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NestedMessage::item1() const {
  // @@protoc_insertion_point(field_list:NestedMessage.item1)
  return item1_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NestedMessage::mutable_item1() {
  // @@protoc_insertion_point(field_mutable_list:NestedMessage.item1)
  return &item1_;
}

// repeated string item2 = 2;
int NestedMessage::item2_size() const {
  return item2_.size();
}
void NestedMessage::clear_item2() {
  item2_.Clear();
}
 const ::std::string& NestedMessage::item2(int index) const {
  // @@protoc_insertion_point(field_get:NestedMessage.item2)
  return item2_.Get(index);
}
 ::std::string* NestedMessage::mutable_item2(int index) {
  // @@protoc_insertion_point(field_mutable:NestedMessage.item2)
  return item2_.Mutable(index);
}
 void NestedMessage::set_item2(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:NestedMessage.item2)
  item2_.Mutable(index)->assign(value);
}
 void NestedMessage::set_item2(int index, const char* value) {
  item2_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:NestedMessage.item2)
}
 void NestedMessage::set_item2(int index, const char* value, size_t size) {
  item2_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:NestedMessage.item2)
}
 ::std::string* NestedMessage::add_item2() {
  return item2_.Add();
}
 void NestedMessage::add_item2(const ::std::string& value) {
  item2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:NestedMessage.item2)
}
 void NestedMessage::add_item2(const char* value) {
  item2_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:NestedMessage.item2)
}
 void NestedMessage::add_item2(const char* value, size_t size) {
  item2_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:NestedMessage.item2)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
NestedMessage::item2() const {
  // @@protoc_insertion_point(field_list:NestedMessage.item2)
  return item2_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
NestedMessage::mutable_item2() {
  // @@protoc_insertion_point(field_mutable_list:NestedMessage.item2)
  return &item2_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
